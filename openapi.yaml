openapi: 3.0.0
info:
  title: Service Ordering API
  description: API for ordering services
  version: 1.0.0

servers:
  - url: http://localhost:8000
    description: Local development server

components:
  securitySchemes:
    BearerAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT

  schemas:
    User:
      type: object
      properties:
        username:
          type: string
        full_name:
          type: string
          nullable: true
        disabled:
          type: boolean
          nullable: true

    Service:
      type: object
      properties:
        id:
          type: string
          format: uuid
        name:
          type: string
        description:
          type: string
        price:
          type: number
          format: float

    Order:
      type: object
      properties:
        id:
          type: string
          format: uuid
        user_id:
          type: string
        services:
          type: array
          items:
            type: string
            format: uuid
        total_price:
          type: number
          format: float
        created_at:
          type: string
          format: date-time

    Token:
      type: object
      properties:
        access_token:
          type: string
        token_type:
          type: string

    OrderCreate:
      type: object
      properties:
        services:
          type: array
          items:
            type: string
            format: uuid

paths:
  /token:
    post:
      summary: Get access token
      requestBody:
        required: true
        content:
          application/x-www-form-urlencoded:
            schema:
              type: object
              properties:
                username:
                  type: string
                password:
                  type: string
      responses:
        '200':
          description: Successful login
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Token'

  /users:
    post:
      summary: Create new user
      security:
        - BearerAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/User'
      responses:
        '200':
          description: User created successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'

  /users/{username}:
    get:
      summary: Get user by username
      security:
        - BearerAuth: []
      parameters:
        - name: username
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: User found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'

  /users/search:
    get:
      summary: Search users by name mask
      security:
        - BearerAuth: []
      parameters:
        - name: name_mask
          in: query
          required: true
          schema:
            type: string
      responses:
        '200':
          description: List of matching users
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/User'

  /services:
    post:
      summary: Create new service
      security:
        - BearerAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Service'
      responses:
        '200':
          description: Service created successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Service'
    get:
      summary: Get all services
      security:
        - BearerAuth: []
      responses:
        '200':
          description: List of services
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Service'

  /orders:
    post:
      summary: Create new order
      security:
        - BearerAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/OrderCreate'
      responses:
        '200':
          description: Order created successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Order'
    get:
      summary: Get all orders
      security:
        - BearerAuth: []
      responses:
        '200':
          description: List of orders
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Order'

  /orders/{order_id}:
    get:
      summary: Get order by ID
      security:
        - BearerAuth: []
      parameters:
        - name: order_id
          in: path
          required: true
          schema:
            type: string
            format: uuid
      responses:
        '200':
          description: Order found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Order'

  /orders/{order_id}/services:
    put:
      summary: Add services to order
      security:
        - BearerAuth: []
      parameters:
        - name: order_id
          in: path
          required: true
          schema:
            type: string
            format: uuid
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                service_ids:
                  type: array
                  items:
                    type: string
                    format: uuid
      responses:
        '200':
          description: Services added successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Order' 